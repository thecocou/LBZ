/*jshint esversion: 6*/
window.onload = initSite;

function initSite() {

    // Cargar datos de los distintos GFX
    datos = cargarDatos();

    let Efectos = [];

    for (let n = 0; n < datos.length; n++) {
        Efectos[n] = new Gfx(datos[n].nombre, datos[n].codigo)
            .setCode();
    }
    console.log(Efectos);
};

class Gfx {
    constructor( nom, cod ) {
        this.name = nom;
        this.htmlElement = document.createElement("div");
        this.codigo = cod;
    }

    setCode() {
        let self = this;
        self.htmlElement.innerHTML = '<div class="codigo"><h1>' + self.name + '</h1><div class="video"><video width="700px" controls autoplay loop><source src="img/' + self.name + '.webm" type="video/webm; codecs="avc1 .42E01 E, mp4a .40 .2"/></video></div><br><p>' + self.codigo + '<p></div>';
        document.getElementById("display").appendChild(self.htmlElement);
        return this;
    }
}

function cargarDatos() {
    let gfxData = [
        {
            nombre: "Kiball",
            codigo: '#texture "data/moves/newgfx/tail_2.png" as $tail<br>#texture "data/moves/newgfx/ball_4.png" as $ball <br>#texture "data/graphics/dust_3.png" as $explosiondust <br>#texture "data/moves/newgfx/expl1a.png" as $wave <br>#texture "data/moves/newgfx/expl.png" as $expl <br> #texture "data/moves/newgfx/blast1.png" as $explosion2 <br>#texture "data/graphics/explosion.png" as $explosion <br><br>function main() { <br>&emsp;&emsp;float $countdown = $Move_BoomLength / $Move_MaxBoomLength; <br>&emsp;&emsp;float $angle; <br>&emsp;&emsp;float speed;<br><br>&emsp;&emsp;// CHARGING<br>&emsp;&emsp;if ($Move_state == MOVE_STATE_CHARGING) { <br>&emsp;&emsp;&emsp;// Ball in hand<br>&emsp;&emsp;&emsp;size = 0.02 * $move_charge + 0.02; <br>&emsp;&emsp;&emsp;nfxColorAura($move_charge + 0.25); <br>&emsp;&emsp;&emsp;nfxBallInHand($Player_BoolAnim); <br> &emsp;&emsp;} <br><br>&emsp;&emsp;// FLYING<br>&emsp;&emsp;if ($Move_state == MOVE_STATE_FLYING) { <br>&emsp;&emsp;&emsp;// Tail<br>&emsp;&emsp;&emsp;if (move_charge <= 0.7) { <br>&emsp;&emsp;&emsp;&emsp;texture_set($tail); <br>&emsp;&emsp;&emsp;&emsp;nfxColorAura(0.8); <br>&emsp;&emsp;&emsp;&emsp;DrawTail(); <br>&emsp;&emsp;&emsp;} <br>&emsp;&emsp;&emsp;// Kiball<br>&emsp;&emsp;&emsp;nfxColorAura(1.0); <br>&emsp;&emsp;&emsp;stdDisplay($ball, 1.0, 1.0, 1.0, $countdown, $move_size); <br>&emsp;&emsp;&emsp;$size = $move_size * 0.9; <br>&emsp;&emsp;&emsp;sprite(); <br>&emsp;&emsp;} <br><br>&emsp;&emsp;// DYING<br>&emsp;&emsp;if ($Move_state == MOVE_STATE_DYING) { <br><br>&emsp;&emsp;&emsp;// explosion GFX<br>&emsp;&emsp;&emsp;$Size = 0.27; <br>&emsp;&emsp;&emsp;$speed = speed + 0.5; <br>&emsp;&emsp;&emsp;glColor4f(1.0, 1.0, 1.0, 1.0); <br><br>&emsp;&emsp;&emsp;if (countdown > 0.6) { <br>&emsp;&emsp;&emsp;&emsp;if (countdown > 0.95) { <br>&emsp;&emsp;&emsp;&emsp;&emsp;// sparks and debris particles<br>&emsp;&emsp;&emsp;&emsp;&emsp;object blastEffect sparks; <br>&emsp;&emsp;&emsp;&emsp;&emsp;object explosionEffect flares; <br>&emsp;&emsp;&emsp;&emsp;&emsp;object debriEffect debris; <br>&emsp;&emsp;&emsp;&emsp;&emsp;object lineBeam beam; <br>&emsp;&emsp;&emsp;&emsp;&emsp;object smokeEffect smoke; <br>&emsp;&emsp;&emsp;&emsp;&emsp;catchallevents(_SYS_RENDERPHASE_ENERGY) { <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;smoke - > update(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;smoke - > draw(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;sparks - > update(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;sparks - > draw(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;debris - > update(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;debris - > draw(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;flares - > update(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;flares - > draw(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;beam - > update(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;beam - > draw(); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;} <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;glColor4f($Aura_Color_R, $Aura_Color_G, $Aura_Color_B, 1.0); <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;smoke - > spawn(1, { <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Move_X, <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Move_Y, <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;-0.1 <br>&emsp;&emsp;&emsp;&emsp;&emsp;}, 0.0, -1); <br>&emsp;&emsp;&emsp;&emsp;&emsp;beam - > spawn(4, { <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_X, <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_Y, <br>&emsp;&emsp;&emsp;&emsp;&emsp;0.0 <br>&emsp;&emsp;&emsp;&emsp;}, 0.0, -1); <br>&emsp;&emsp;&emsp;&emsp;debris - > spawn(4, { <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_X, <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_Y, <br>&emsp;&emsp;&emsp;&emsp;&emsp;0.0 <br>&emsp;&emsp;&emsp;&emsp;}, 0.0, -1); <br>&emsp;&emsp;&emsp;&emsp;sparks - > spawn(4, { <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_X, <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_Y, <br>&emsp;&emsp;&emsp;&emsp;&emsp;0.0 <br>&emsp;&emsp;&emsp;&emsp;}, 0.0, -1); <br>&emsp;&emsp;&emsp;&emsp;flares - > spawn(2, { <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_X, <br>&emsp;&emsp;&emsp;&emsp;&emsp;Move_Y, <br>&emsp;&emsp;&emsp;&emsp;&emsp;0.1 <br>&emsp;&emsp;&emsp;&emsp;}, 0.0, -1); <br>&emsp;&emsp;&emsp;} <br><br>&emsp;&emsp;&emsp;stdDisplay($explosion, 1.0, 1.0, 1.0, 1.0, move_size * $countdown); <br>&emsp;&emsp;} <br><br>&emsp;&emsp;if (move_charge >= 0.3) { <br>&emsp;&emsp;&emsp;// expansion<br>&emsp;&emsp;&emsp;nfxColorAura($countdown); <br>&emsp;&emsp;&emsp;stdDisplay($wave, 1.0, 1.0, 1.0, $countdown, [$move_size - 0.5] - [$countdown - 1.9]); <br>&emsp;&emsp;} <br> &emsp;} <br>} <br> ',
        }, 
        {
            nombre: "Genkidama",
            codigo: '#texture "data/moves/newgfx/ball_blue_2.png" as $tblue2<br>#texture "data/moves/newgfx/blast1.png" as $shine <br> #texture "data/moves/newgfx/ball_12.png" as $wave <br><br> function main() { <br> &emsp;float $countdown = $Move_BoomLength / $Move_MaxBoomLength; <br>&emsp;float $RANDOM2; <br>&emsp;$RANDOM2 = 0.1 - (random() * 0.1); <br><br> &emsp;// CHARGING <br> &emsp;if ($Move_state == MOVE_STATE_CHARGING) { <br> &emsp;&emsp;// Shine <br> &emsp;&emsp;stdDisplay($shine, 0.2, 1.0, 1.0, 1.0, [$move_Size * 2.3] + $RANDOM2); <br> &emsp;&emsp;// Ball <br>&emsp;&emsp;$Rotation = $Defrot; <br> &emsp;&emsp;stdDisplay($tblue2, 1.0, 1.0, 1.0, 1.0, $move_Size + $RANDOM2); <br>&emsp;} <br><br> &emsp;// FLYING <br> &emsp;if ($Move_state == MOVE_STATE_FLYING) { <br>&emsp;&emsp;// Shine <br>&emsp;&emsp;stdDisplay($shine, 0.2, 1.0, 1.0, 1.0, [$move_Size * 2.5] + $RANDOM2); <br>&emsp;&emsp;// Ball <br>&emsp;&emsp;$Rotation = $Defrot; <br>&emsp;&emsp;stdDisplay($tblue2, 1.0, 1.0, 1.0, 1.0, $move_Size + $RANDOM2); <br>&emsp;} <br><br>&emsp;// DYING <br>&emsp;if ($Move_state == MOVE_STATE_DYING) { <br>&emsp;&emsp;if (countdown > 0.95) { <br>&emsp;&emsp;&emsp;// sparks and debris particles <br>&emsp;&emsp;&emsp;object blastEffect sparks; <br>&emsp;&emsp;&emsp;object waveEffect waves; <br>&emsp;&emsp;&emsp;catchallevents(_SYS_RENDERPHASE_ENERGY) { <br>&emsp;&emsp;&emsp;&emsp;sparks - > update(); <br>&emsp;&emsp;&emsp;&emsp;sparks - > draw(); <br>&emsp;&emsp;&emsp;&emsp;waves - > update(); <br>&emsp;&emsp;&emsp;&emsp;waves - > draw(); <br>&emsp;&emsp;&emsp;} <br>&emsp;&emsp;&emsp;waves - > spawn(1, { Move_X, Move_Y, 1.0 }, 0.0, -1); <br>&emsp;&emsp;&emsp;sparks - > spawn(4, { Move_X, Move_Y, 0.0 }, 0.0, -1); <br>&emsp;&emsp;} <br>&emsp;&emsp;// Wave <br>&emsp;&emsp;gfxLens(); <br>&emsp;} <br> }<br><br>',
        },
        {
            nombre: "Kamehameha",
            codigo: '#texture "data/moves/newgfx/kameball.png" as $kameball<br>#texture "data/moves/newgfx/beam_1.png" as $beam_white<br>#texture "data/moves/newgfx/beam_1d.png" as $beam_border<br>#texture "data/moves/newgfx/flame_1b.png" as $flame_border<br>#texture "data/moves/newgfx/tex_sparks.png" as $tcyan_sparks<br><br>function main () {<br>&emsp;float $countdown = $Move_BoomLength / $Move_MaxBoomLength;<br>&emsp;float $C1 = 0.5 - (random() * 0.05);<br><br>&emsp;// CHARGING<br>&emsp;if($Move_state==MOVE_STATE_CHARGING) {<br><br>&emsp;&emsp;// sparks and debris particles<br>&emsp;&emsp;object waveEffect sparks;<br>&emsp;&emsp;catchallevents(_SYS_RENDERPHASE_ENERGY) {&emsp;<br>&emsp;&emsp;&emsp;sparks -> update();<br>&emsp;&emsp;&emsp;sparks -> draw();<br>&emsp;&emsp;}<br>&emsp;&emsp;sparks -> spawn(1, {Move_X, Move_Y, 0.5}, 0.0, -1);<br>&emsp;&emsp;sparks -> attract({Move_X, Move_Y, 0.1}, -0.1, 1.0);<br>&emsp;&emsp;<br>&emsp;&emsp;// smallball in hand<br>&emsp;&emsp;SmoothShading(0);<br>&emsp;&emsp;stdDrawSmallKiballInHand($move_charge * 0.8, 0.2, 1.0, 1.0, 2);<br>&emsp;&emsp;// lightbeams<br>&emsp;&emsp;$Rotation = $Defrot;&emsp;<br>&emsp;&emsp;SmoothShading(1);<br>&emsp;&emsp;//Set color:<br>&emsp;&emsp;$defColorR = 0.2;<br>&emsp;&emsp;$defColorG = 1.0;<br>&emsp;&emsp;$defColorB = 1.0;<br>&emsp;&emsp;//Set Alpha<br>&emsp;&emsp;$defColorA = $move_charge;<br>&emsp;&emsp;// Draw the lightbeams<br>&emsp;&emsp;drawlightBeams();<br>&emsp;}<br><br>&emsp;// FLYING<br>&emsp;if ($Move_state == MOVE_STATE_FLYING) {<br><br>&emsp;&emsp;// ball at the end<br>&emsp;&emsp;stdDisplay($kameball, 0.2, 1.0, 1.0, 1.0, $move_size * 0.8);<br>&emsp;<br>&emsp;&emsp;// beam white<br>&emsp;&emsp;glColor4f(1.0, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($beam_white);<br>&emsp;&emsp;nfxDrawBeam($move_size * 0.17); <br>&emsp;&emsp;<br>&emsp;&emsp;// beam border<br>&emsp;&emsp;glColor4f(0.2, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($beam_border);<br>&emsp;&emsp;nfxDrawBeam($move_size * 0.15);<br>&emsp;&emsp;<br>&emsp;&emsp;// flame cyan at the hand&emsp;&emsp;<br>&emsp;&emsp;glColor4f(0.2, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = ($move_Size + $C1) * 0.40;<br>&emsp;&emsp;nfxDrawFlashInHand();<br>&emsp;&emsp;<br>&emsp;&emsp;// flame white at the hand<br>&emsp;&emsp;glColor4f(1.0, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = ($move_Size + $C1) * 0.33;<br>&emsp;&emsp;nfxDrawFlashInHand();<br><br>&emsp;&emsp;// flame cyan at the end&emsp;&emsp;<br>&emsp;&emsp;glColor4f(0.2, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = ($move_Size);<br>&emsp;&emsp;nfxDrawFlashAtBeam();<br>&emsp;&emsp;<br>&emsp;&emsp;// flame white at the end<br>&emsp;&emsp;glColor4f(1.0, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = $move_Size * 0.9;<br>&emsp;&emsp;nfxDrawFlashAtBeam();&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;gfxBackLens();<br>&emsp;}<br>&emsp;<br>&emsp;// DYING<br>&emsp;if ($Move_state == MOVE_STATE_DYING) {<br><br>&emsp;&emsp;gfxLens();<br>&emsp;<br>&emsp;&emsp;// ball at the end<br>&emsp;&emsp;stdDisplay($kameball, 0.2, 1.0, 1.0, 1.0, $countdown * 0.75);<br>&emsp;&emsp;<br>&emsp;&emsp;// beam white<br>&emsp;&emsp;glColor4f(1.0, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($beam_white);<br>&emsp;&emsp;nfxDrawBeam($countdown * 0.2); <br>&emsp;&emsp;// Create beam <br>&emsp;&emsp;nfxDrawBeam(width);<br>&emsp;&emsp;<br>&emsp;&emsp;// beam border<br>&emsp;&emsp;glColor4f(0.2, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($beam_border);<br>&emsp;&emsp;nfxDrawBeam($countdown * 0.2);<br>&emsp;&emsp;<br>&emsp;&emsp;// flame cyan at the hand&emsp;&emsp;<br>&emsp;&emsp;glColor4f(0.2, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = $countdown * 0.5;<br>&emsp;&emsp;nfxDrawFlashInHand();<br>&emsp;&emsp;<br>&emsp;&emsp;// flame white at the hand<br>&emsp;&emsp;glColor4f(1.0, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = ($countdown) * 0.4;<br>&emsp;&emsp;nfxDrawFlashInHand();&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;// flame cyan at the end&emsp;<br>&emsp;&emsp;glColor4f(0.2, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = $countdown;<br>&emsp;&emsp;nfxDrawFlashAtBeam();<br>&emsp;&emsp;<br>&emsp;&emsp;// flame white at the end<br>&emsp;&emsp;glColor4f(1.0, 1.0, 1.0, 1.0);<br>&emsp;&emsp;texture_set($flame_border);<br>&emsp;&emsp;$Size = $countdown * 0.85;<br>&emsp;&emsp;nfxDrawFlashAtBeam();<br>&emsp;&emsp;<br>&emsp;&emsp;// sparks and debris particles<br>&emsp;&emsp;if (countdown > 0.1) {<br>&emsp;&emsp;&emsp;// sparks and debris particles<br>&emsp;&emsp;&emsp;object fireEffect sparks;<br>&emsp;&emsp;&emsp;catchallevents(_SYS_RENDERPHASE_ENERGY) {<br>&emsp;&emsp;&emsp;&emsp;sparks -> update();<br>&emsp;&emsp;&emsp;&emsp;sparks -> draw();<br>&emsp;&emsp;&emsp;}<br>&emsp;&emsp;&emsp;sparks -> spawn(5, {Move_X, Move_Y, 0.0}, 0.0, -1);<br>&emsp;&emsp;}<br>&emsp;}<br>}',
        }
    ];
    return gfxData;
}